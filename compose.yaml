# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
version: '3.7'
services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    develop:
      watch:
      - path: ./package.json
        action: rebuild
      - path: ./next.config.js
        action: rebuild
      - path: ./package-lock.json
        action: rebuild
      - path: ./app
        action: sync
    environment:
      - POSTGRES_URL=postgres://default:ZU5euJcDtIK1@ep-nameless-unit-42205626-pooler.us-east-1.postgres.vercel-storage.com:5432/verceldb
      - POSTGRES_PRISMA_URL=postgres://default:ZU5euJcDtIK1@ep-nameless-unit-42205626-pooler.us-east-1.postgres.vercel-storage.com:5432/verceldb?pgbouncer=true&connect_timeout=15
      - POSTGRES_URL_NON_POOLING=postgres://default:ZU5euJcDtIK1@ep-nameless-unit-42205626.us-east-1.postgres.vercel-storage.com:5432/verceldb
      - POSTGRES_USER=default
      - POSTGRES_HOST=ep-nameless-unit-42205626-pooler.us-east-1.postgres.vercel-storage.com
      - POSTGRES_PASSWORD=ZU5euJcDtIK1
      - POSTGRES_DATABASE=verceldb
      - AUTH_SECRET=GYFgrxDlStj4KNaCn7+TbT13SzXdUedURYwZZaT5cKs=
volumes:
  derivate-trades:
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

